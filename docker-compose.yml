# Update Time: 2023-12-3 23:50
version: "3.4"

services:
  # XiaoaiGPT
  xiaogpt1:
    image: yihong0618/xiaogpt
    command: --config=/config/config.json
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - nfs_xiaogpt_config1:/config
      - nfs_xiaogpt_src:/app/xiaogpt 
    deploy:
      labels:
        - homepage.group=AI & Automation
        - homepage.name=XiaoGPT #1
        - homepage.icon=https://www.waylon.wang:4/images/services/xiaogpt.png
        - homepage.description=XiaoGPT on Bed Room
        - homepage.ping=xiaogpt1
        - homepage.weight=20    
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true
  xiaogpt2:
    image: yihong0618/xiaogpt
    command: --config=/config/config.json
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - nfs_xiaogpt_config2:/config
      - nfs_xiaogpt_src:/app/xiaogpt
    deploy:
      labels:
        - homepage.group=AI & Automation
        - homepage.name=XiaoGPT #2
        - homepage.icon=https://www.waylon.wang:4/images/services/xiaogpt.png
        - homepage.description=XiaoGPT on Living Room
        - homepage.ping=xiaogpt2
        - homepage.weight=21    
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true
  xiaogpt3:
    image: yihong0618/xiaogpt
    command: --config=/config/config.json
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - nfs_xiaogpt_config3:/config
      - nfs_xiaogpt_src:/app/xiaogpt
    deploy:
      labels:
        - homepage.group=AI & Automation
        - homepage.name=XiaoGPT #3
        - homepage.icon=https://www.waylon.wang:4/images/services/xiaogpt.png
        - homepage.description=XiaoGPT on Children Room
        - homepage.ping=xiaogpt3
        - homepage.weight=22
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true                    

  # FastGPT
  fastgpt:
    image: ghcr.io/labring/fastgpt:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      DEFAULT_ROOT_PSW: ${FASTGPT_DEFAULT_ROOT_PSW}
      OPENAI_BASE_URL: ${FASTGPT_OPENAI_BASE_URL}
      CHAT_API_KEY: ${FASTGPT_CHAT_API_KEY}
      DB_MAX_LINK: ${FASTGPT_DB_MAX_LINK}
      TOKEN_KEY: ${FASTGPT_TOKEN_KEY}
      ROOT_KEY: ${FASTGPT_ROOT_KEY}
      FILE_TOKEN_KEY: ${FASTGPT_FILE_TOKEN_KEY}
      MONGODB_URI: ${FASTGPT_MONGODB_URI}
      PG_URL: ${FASTGPT_PG_URL}
      AXIOS_PROXY_HOST: ${FASTGPT_AXIOS_PROXY_HOST}
      AXIOS_PROXY_PORT: ${FASTGPT_AXIOS_PROXY_PORT}
      TZ: ${TZ}
    # volumes:
    #   - nfs_fastgpt_config:/app/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.fastgpt.rule=Host(`fastgpt.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.fastgpt.entrypoints=websecure"
        - "traefik.http.routers.fastgpt.service=fastgpt"
        - "traefik.http.routers.fastgpt.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.fastgpt.loadbalancer.server.port=3000"
        - homepage.group=AI & Automation
        - homepage.name=FastGPT
        - homepage.icon=https://www.waylon.wang:4/images/services/fastgpt.png
        - homepage.href=https://fastgpt.${DOMAIN_SWARM}:4/
        - homepage.description=基于LLM大模型的AI知识库问答平台
        - homepage.siteMonitor=http://fastgpt:3000
        - homepage.weight=1
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true

  # One API
  oneapi:
    image: justsong/one-api:latest
    command: --log-dir /app/logs
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      # SQL_DSN: ${ONEAPI_SQL_DSN}  # 修改此行，或注释掉以使用 SQLite 作为数据库
      REDIS_CONN_STRING: ${ONEAPI_REDIS_CONN_STRING}
      SYNC_FREQUENCY: 60
      SESSION_SECRET: ${ONEAPI_SESSION_SECRET}
      HTTP_PROXY: ${OPENCLASH_HTTP_PROXY}
      HTTPS_PROXY: ${OPENCLASH_HTTP_PROXY}
      # http_proxy: ${CLASH_HTTP_PROXY}
      # https_proxy: ${CLASH_HTTP_PROXY}
      TZ: ${TZ}     
    volumes:
      - nfs_oneapi_data:/data
      - nfs_oneapi_log:/app/logs  
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.oneapi.rule=Host(`oneapi.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.oneapi.entrypoints=websecure"
        - "traefik.http.routers.oneapi.service=oneapi"
        - "traefik.http.routers.oneapi.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.oneapi.loadbalancer.server.port=3000"
        - homepage.group=AI & Automation
        - homepage.name=OneAPI
        - homepage.icon=https://www.waylon.wang:4/images/services/oneapi.png
        - homepage.href=https://oneapi.${DOMAIN_SWARM}:4/
        - homepage.description=OpenAI接口管理&分发系统
        - homepage.siteMonitor=http://oneapi:3000
        - homepage.weight=2
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true     

  # GPT Academic
  gptacademic:
    image: ghcr.io/binary-husky/gpt_academic_nolocal:master
    command: >
      bash -c "python3 -u main.py"
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      API_KEY: ${GPTACADEMIC_API_KEY}
      API_URL_REDIRECT: ${GPTACADEMIC_API_URL_REDIRECT}
      USE_PROXY: ${GPTACADEMIC_USE_PROXY}
      # proxies: { "http": "socks5h://localhost:10880", "https": "socks5h://localhost:10880", } 
      LLM_MODEL: ${GPTACADEMIC_LLM_MODEL}
      AVAIL_LLM_MODELS: $GPTACADEMIC_AVAIL_LLM_MODELS}
      WEB_PORT: ${GPTACADEMIC_WEB_PORT}
      ADD_WAIFU: ${GPTACADEMIC_ADD_WAIFU}
      THEME: ${GPTACADEMIC_THEME}
      DEFAULT_WORKER_NUM: ${GPTACADEMIC_DEFAULT_WORKER_NUM}
      AUTHENTICATION: ${GPTACADEMIC_AUTHENTICATION}
      TZ: ${TZ}     
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.gptacademic.rule=Host(`gptacademic.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.gptacademic.entrypoints=websecure"
        - "traefik.http.routers.gptacademic.service=gptacademic"
        - "traefik.http.routers.gptacademic.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.gptacademic.loadbalancer.server.port=${GPTACADEMIC_WEB_PORT}"
        - homepage.group=AI & Automation
        - homepage.name=GPT Academic
        - homepage.icon=https://www.waylon.wang:4/images/services/academic.png
        - homepage.href=https://gptacademic.${DOMAIN_SWARM}:4/
        - homepage.description=GPT 学术优化
        - homepage.siteMonitor=http://gptacademic:${GPTACADEMIC_WEB_PORT}
        - homepage.weight=3
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.ai == true     
                     
networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_xiaogpt_src:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/xiaogpt/src/xiaogpt        
  nfs_xiaogpt_config1:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/xiaogpt/config1
  nfs_xiaogpt_config2:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/xiaogpt/config2
  nfs_xiaogpt_config3:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/xiaogpt/config3    
  nfs_fastgpt_config:  
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/fastgpt/data  
  nfs_oneapi_data:  
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/oneapi/data   
  nfs_oneapi_log:  
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/ai/oneapi/log