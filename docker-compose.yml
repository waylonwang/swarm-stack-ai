# Update Time: 2023-05-20 21:57
version: "3.4"

services:
  # NocoBase
  nocobase:
    image: nocobase/nocobase:main
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      DB_LOGGING: ${DB_LOGGING}       
      DB_DIALECT: ${DB_DIALECT}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      LOCAL_STORAGE_BASE_URL: ${LOCAL_STORAGE_BASE_URL}
      TZ: ${TZ}
    volumes:
      - nfs_nocobase:/app/nocobase/storage
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocobase.rule=Host(`nocobase.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.nocobase.entrypoints=websecure"
        - "traefik.http.routers.nocobase.service=nocobase"
        - "traefik.http.routers.nocobase.middlewares=noauth-chain@file"
        - "traefik.http.services.nocobase.loadbalancer.server.port=80"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # Transmission
  transmission:
    image: helloz/transmission:latest
    networks: [network_cluster]
    restart: on-failure  
    environment:
      # 直接使用Portainer容器内的环境变量
      USERNAME: ${PT_USERNAME}       
      PASSWORD: ${PT_PASSWORD}
      TZ: ${TZ}
    volumes:
      - /mnt/downloads:/root/Downloads
      - nfs_transmission:/root/.config/transmission-daemon
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.transmission.rule=Host(`pt.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.transmission.entrypoints=websecure"
        - "traefik.http.routers.transmission.service=transmission"
        - "traefik.http.routers.transmission.middlewares=noauth-chain@file"
        - "traefik.http.services.transmission.loadbalancer.server.port=9091"
        - "traefik.tcp.routers.torrent.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.torrent.entrypoints=torrent"
        - "traefik.tcp.routers.torrent.service=torrent"
        - "traefik.tcp.services.torrent.loadbalancer.server.port=51413"            
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # Hlink
  hlink:
    image: likun7981/hlink:latest
    networks: [network_cluster]
    restart: on-failure  
    environment:
      HLINK_HOME: /share/data/hlinkDocker
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - /mnt/downloads:/downloads
      - nfs_hlink:/share
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.hlink.rule=Host(`hlink.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.hlink.entrypoints=websecure"
        - "traefik.http.routers.hlink.service=hlink"
        - "traefik.http.routers.hlink.middlewares=noauth-chain@file"
        - "traefik.http.services.hlink.loadbalancer.server.port=9090"          
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # NAS-Tools
  nas-tools:
    image: shmilyin/nas-tools
    networks: [network_cluster]
    restart: on-failure  
    environment:
      PUID: 0    # 想切换为哪个用户来运行程序，该用户的uid
      PGID: 0    # 想切换为哪个用户来运行程序，该用户的gid
      UMASK: 000 # 掩码权限，默认000，可以考虑设置为022
      NASTOOL_AUTO_UPDATE: "false"  # 如需在启动容器时自动升级程程序请设置为true
      NASTOOL_CN_UPDATE: "false" # 如果开启了容器启动自动升级程序，并且网络不太友好时，可以设置为true，会使用国内源进行软件更新
      # REPO_UR: https://github.com/wangyan/nas-tools.git  # 当你访问github网络很差时，可以考虑解释本行注释
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - /mnt/downloads:/downloads
      - nfs_nastools_media:/media
      - nfs_nastools_config:/config
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nastools.rule=Host(`nastools.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.nastools.entrypoints=websecure"
        - "traefik.http.routers.nastools.service=nastools"
        - "traefik.http.routers.nastools.middlewares=noauth-chain@file"
        - "traefik.http.services.nastools.loadbalancer.server.port=3000"          
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_nocobase:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocobase/storage
  nfs_transmission:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/transmission/config
  nfs_hlink:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/hlink/share   
  nfs_nastools_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/nastools/config
  nfs_nastools_media:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :/volume4/video